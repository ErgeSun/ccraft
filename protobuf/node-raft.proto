syntax="proto3";
//option cc_generic_services = true;

package ccraft.protocal;

/**
 * A server in a configuration.
 */
message RfServerId {
    /**
     * The ID of the server.
     */
    uint32 serverId = 1;
    /**
     * The network address:port of the server.
     * Eg: localhost:9921„ÄÅ192.168.0.55:9921 and so on.
     */
    string address = 2;
}

/**
 * The type of payload stored in a log entry.
 */
enum RfLogEntryType {
    /**
     * No use.
     */
    NONE = 0;
    /**
     * Stores a 'Configuration', to be used internally by the consensus module.
     */
    CONFIGURATION = 1;
    /**
     * Stores a command to be processed by the state machine.
     */
    DATA = 2;
    /**
     * No op.
     */
    NOOP = 3;
};

message RfLogEntry {
    uint32         term         = 1;
    uint32         index        = 2;
    RfLogEntryType type         = 3;
    bytes          data         = 4;
}

message AppendRfLogRequest {
    uint32                term         = 1;
    uint32                leaderId     = 2;
    uint32                prevLogIndex = 3;
    uint32                prevLogTerm  = 4;
    repeated RfLogEntry   entries      = 5;
    uint32                leaderCommit = 6;
}

message AppendRfLogResponse {
    uint32 term    = 1;
    bool   success = 2;
}

message RequestVoteRequest {
    uint32                term         = 1;
    uint32                candidateId  = 2;
    uint32                lastLogIndex = 3;
    uint32                lastLogTerm  = 4;
}

message RequestVoteResponse {
    uint32 term        = 1;
    bool   voteGranted = 2;
}
